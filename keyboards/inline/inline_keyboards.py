from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from random import shuffle
from aiogram import types

# –ö–õ–ê–°–°: TestKeyboardBuilder
# –°–æ–∑–¥–∞–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–µ—Å—Ç—ã,
# –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –¥–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–æ –≤—Å–µ–º–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º–∏
class TestKeyboardBuilder:
    def __init__(self):
        self.questions = None

    def __unpack_test_materials(self, test_materials):
        self.questions = test_materials["questions"]

    def __create_keyboards(self):
        keyboards = {}
        for question_number in range(1, len(self.questions) + 1):
            question = self.questions[f"question_{question_number}"]
            buttons = \
                [
                    InlineKeyboardButton(text=key, callback_data=str(value))
                    for key, value in
                    question["answers"].items()
                ]

            shuffle(buttons)
            question_text = question["question_text"]
            product = {"text": question_text, "keyboard": InlineKeyboardMarkup(row_width=1).add(*buttons)}
            keyboards[f"question_{question_number}"] = product
        return keyboards

    def get_keyboards(self, test_materials):
        self.__unpack_test_materials(test_materials=test_materials)

        return self.__create_keyboards()

# –ö–õ–ê–°–°–ñ: SimpleKeyboardBuilder
# –°–æ–∑–¥–∞–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ—Å—Ç—ã–º–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º–∏ –∏ –º–µ–ª–∫–∏–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏.
class SimpleKeyboardBuilder:
    @classmethod
    def get_social_networks_keyboard(cls):
        facebook_button = InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –≤ Facebook",
                                               "https://www.facebook.com/groups/communityfriendskz/")

        instagram_button = InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –≤ Instagram", "https://instagram.com/community__friends")

        return {
            "text": "Facebook –∏ Instagram —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ–µ–∫—Ç–∞",
            "keyboard": InlineKeyboardMarkup(row_width=1).add(instagram_button, facebook_button)
        }

    @classmethod
    def get_project_news_keyboards(cls):
        first_button = InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏", "https://www.facebook.com/AMECAlmaty/posts/313432297466945")

        second_button = InlineKeyboardButton\
            (
                text="–ü–µ—Ä–µ–π—Ç–∏",
                url="https://www.the-village-kz.com/village/city/news-city/19155-dokontaktnaya-profilaktika-novyy-sposob-profilaktiki-vich-v-kazahstane"
            )

        first_product = {
            "text": "–û –í–ò–ß —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—é—Ç –ø–æ–¥—Ä–æ—Å—Ç–∫–∏",
            "keyboard": InlineKeyboardMarkup().add(first_button)
        }

        second_product = {
            "text": "–î–æ–∫–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞: –ù–æ–≤—ã–π —Å–ø–æ—Å–æ–± –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏ –í–ò–ß –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ",
            "keyboard": InlineKeyboardMarkup().add(second_button)
        }

        return first_product, second_product

    @classmethod
    def get_tell_partner_keyboard(cls):
        tell_partner_button = InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏", "https://sms.icapapps.kz/ru/")
        return {
            "text": "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–∞—Ä—Ç–Ω—ë—Ä—É –æ –≤–∞–∂–Ω–æ—Å—Ç–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–Ω–æ–Ω–∏–º–Ω–æ üôã‚Äç‚ôÄ",
            "keyboard": InlineKeyboardMarkup().add(tell_partner_button)
        }

    @classmethod
    def get_language_selection_documents_keyboard(cls):
        send_kz_document = InlineKeyboardButton(text="“ö–∞–∑–∞“õ—à–∞", callback_data="send_document_KZ")
        send_ru_document = InlineKeyboardButton(text="–†—É—Å—Å–∫–∏–π", callback_data="send_document_RU")
        ask_language = "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å:"

        return {
            "text": ask_language,
            "keyboard": InlineKeyboardMarkup(row_width=1).add(send_ru_document, send_kz_document)
        }

    @classmethod
    def get_back_to_menu_keyboard(cls):
        back_to_menu = InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="menu")
        return InlineKeyboardMarkup(row_width=1).add(back_to_menu)

    @classmethod
    def get_language_selection_keyboard(cls, callback):
        ru_button = InlineKeyboardButton(text="–†—É—Å—Å–∫–∏–π", callback_data=f"ru_{callback}")
        kz_button = InlineKeyboardButton(text="“ö–∞–∑–∞“õ—à–∞", callback_data=f"kz_{callback}")
        language_select_keyboard = InlineKeyboardMarkup(row_width=1).add(ru_button, kz_button)
        return language_select_keyboard